<header>
    <h1 class="section_h" id="ghc-tags-plugin">Ghc Tags Plugin <small><a href="https://hackage.haskell.org/package/ghc-tags-plugin">published on hackage</a></small></h1>
    <h3>Getting vim tags from Haskell's parsed tree</h3>
</header>

<p>
    Working on a large code base, which many type level features could be
    easier with a proper editor support.  Finding associated type class
    instances or open type families isn't easy at the moment.  Existing
    solutions like <a
        href="https://hackage.haskell.org/package/hasktags">hasktags</a> do not
    cover all the new language features, so at times one is left
    is searching the tree by hand.  Haskell IDE engine, will deliver a very
    good solution, but at this time it is still quite hard to find a good
    language client for <code>vim</code> which works out of the box.
</p>

<p>
    Ghc plugin is a good fit for solving this problem, and here are the reasons
    why:
</p>
<ul>
    <li><code>CPP</code> pragmas are resolved;</li>
    <li>it doesn't matter whether you write literate haskell, regular
        haskell or you are using <code>hsc2hs</code> or some other
        preprocessor;</li>
    <li>contains accurate source information;</li>
    <li>one can derive additional information: tag kinds, whether its static or
        not (i.e. exported or not) - vim decides how to order tags
        depending on this information;
    </li>
    <li>regularly updated, as you build your project; possibly it could be
        integrated with <code>ghcid</code> <small>(I haven't tried
            yet)</small>.</li>
</ul>
In the future it could be even extended with type level information.

<p>
    Over last two weeks
    I worked out a quite nice solution <a
        href="https://hackage.haskell.org/package/ghc-tags-plugin">ghc-tags-plugin</a>    
    using ghc <a
        href="https://ghc.gitlab.haskell.org/ghc/doc/users_guide/extending_ghc.html#compiler-plugins">plugin
        system</a>: at the moment only the part which has access to <a
        href="https://ghc.gitlab.haskell.org/ghc/doc/users_guide/extending_ghc.html#parsed-representation">parsed tree</a>.

    This allows to output tags for:
</p>
<ul>
    <li>top level terms</li>
    <li>data types</li>
    <li>record fields</li>
    <li>type synonyms</li>
    <li>type classes</li>
    <li>type class members</li>
    <li>type class instances</li>
    <li>type families <i><small>standalone and associated</small></i></li>
    <li>type family instances <i><small>standalone and associated</small></i></li>
    <li>data type families <i><small>standalone and associated</small></i></li>
    <li>data type families instances <i><small>standalone and associated</small></i></li>
    <li>data type family instances constructors <i><small>standalone and associated</small></i></li>
</ul>

And it includes support for:
<ul>
    <li>tag kinds (as given above)</li>
    <li>whether terms, type constructor, class method, etc. are exported or not</li>
    <li>its tags file parser is compatible with output of
        <code>ctags</code>, so if you want you could append tags generated
        by <code>ctags</code> (i.e. for <code>C</code> in your project).
    </li>
</ul>

<p>
</p>

<p>
    Configuration is simple (and possibly can be still improved).  For
    <code>cabal</code> you don't need to modify checked files (only
    <code>cabal.project.local</code>). Check out the <a
        href="https://github.com/coot/ghc-tags-plugin/#plugin-configuration">readme</a>
    file for instructions.

</p>
<p>
    If you encounter problems with installation, the
    <a href="https://github.com/coot/ghc-tags-plugin">github repo</a> contains
    a <code>Makefile</code> to remove the plugin from the cabal store,
    install it, list installed versions.  This turned out to be quite useful
    during development (co-existence of the same version of the plugin which
    depends on an internal library may cause problems).
</p>

<p>
    I have been using this plugin on a daily basis while working on
    <code>IOHK</code> code base which contains
</p>
<pre>
haskell:     214521 (96.22%)
ansic:         5285 (2.37%)
sh:            1868 (0.84%)
javascript:      1019 (0.46%)
cpp:            197 (0.09%)
perl:            63 (0.03%)
lisp:             7 (0.00%)
</pre>
    Navigating the codebase, re-discovering where things were moved after
    a refactoring, discovering code in far away from my area of expertise
    became much easier.

<p>
    It has been tested on <code>Windows</code> and <code>Linux</code>.  The
    only requirement is: <code>GHC</code> version <code>8.6.5</code> or later.
</p>

<p>
    Happy Haskelling!
</p>

<h4>Links</h4>
<ul>
    <li><a href="https://github.com/coot/ghc-tags-plugin">github repo</a></li>
    <li><a href="https://hackage.haskell.org/package/ghc-tags-plugin">hackage</a></li>
</ul>
